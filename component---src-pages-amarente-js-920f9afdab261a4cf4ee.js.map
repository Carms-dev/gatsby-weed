{"version":3,"sources":["webpack:///./src/utils/helper.js","webpack:///./src/utils/effect.js","webpack:///./src/pages/amarente.js"],"names":["rand","max","min","Math","floor","random","explode","explodees","document","querySelectorAll","pageHeight","forEach","elem","clientHeight","style","top","left","window","innerWidth","classList","add","animationDuration","ExplodeStyles","styled","div","SubPageOne","data","useStaticQuery","Layout","onClick","allFile","edges","map","node","position","overflow","width","zIndex","className","fluid","childImageSharp","key","base","alt","split"],"mappings":"8NAAaA,EAAO,SAACC,EAAKC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,ICCrCI,EAAU,WACrB,IAAMC,EAAYC,SAASC,iBAAiB,aAC5C,GAAIF,EAAW,CAEb,IAAIG,EAAa,EACjBH,EAAUI,SAAQ,SAACC,GACjBF,GAAcE,EAAKC,gBAGrBN,EAAUI,SAAQ,SAACC,GAEjBA,EAAKE,MAAMC,KAAOf,EAAKU,EAAY,GAAME,EAAKC,aAAe,GAAM,IAAM,KACzED,EAAKE,MAAME,KAAOhB,EAAK,GAAI,IAAM,IAAMiB,OAAOC,WAAcN,EAAKC,aAAe,EAAK,KACrFD,EAAKO,UAAUC,IAAI,YACnBR,EAAKE,MAAMO,kBAAoBrB,EAAK,GAAI,GAAK,SCR7CsB,EAAgBC,IAAOC,IAAV,0EAAGD,CAAH,+iBAmCJ,SAASE,IACtB,IAAMC,EAAOC,YAAe,cAqB5B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACN,EAAD,CAAeO,QAASvB,GACrBoB,EAAKI,QAAQC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACtB,kBAAC,IAAD,CACEnB,MAAO,CACLoB,SAAU,WACVC,SAAU,UACVC,MAAUpC,EAAK,GAAI,IAAd,OACLqC,OAAQrC,EAAK,GAAI,IAEnBsC,UAAU,WACVC,MAAON,EAAKO,gBAAgBD,MAC5BE,IAAKR,EAAKS,KACVC,IAAKV,EAAKS,KAAKE,MAAM,KAAK","file":"component---src-pages-amarente-js-920f9afdab261a4cf4ee.js","sourcesContent":["export const rand = (max, min) => {\n  return Math.floor(Math.random() * (max - min) + min);\n}","import { rand } from './helper';\n\nexport const explode = () => {\n  const explodees = document.querySelectorAll(\".explodee\");\n  if (explodees) {\n    // set window height\n    let pageHeight = 0;\n    explodees.forEach((elem) => {\n      pageHeight += elem.clientHeight;\n    })\n    // for each of the element set top and left style randomly\n    explodees.forEach((elem) => {\n      // scale down by 1.2 to reduce empty spaces\n      elem.style.top = (rand(pageHeight, 0) - (elem.clientHeight / 2)) / 1.2 + \"px\";\n      elem.style.left = rand(80, 20) / 100 * window.innerWidth - (elem.clientHeight / 2) + \"px\";\n      elem.classList.add(\"floating\");\n      elem.style.animationDuration = rand(10, 2) + \"s\";\n    })\n  }\n}","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from \"gatsby-image\"\nimport Layout from '../components/Layout';\nimport styled from 'styled-components';\nimport { rand } from '../utils/helper';\nimport { explode } from '../utils/effect';\n\nconst ExplodeStyles = styled.div`\n  overflow: hidden;\n  padding: 100px;\n  .explodee {\n    top: 50vh;\n    left: 50vw;\n    transform: translate(-50%, -50%);\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n    transition: all 1s ease-in-out;\n  }\n  .floating {\n    animation-name: floating;\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    animation-timing-function: ease-in-out;\n    transform: translate3d(0, 0, 0);\n    backface-visibility: hidden;\n    perspective: 1000px;\n  }\n  @keyframes floating {\n    10%, 90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n    20%, 80% {\n      transform: translate3d(2px, 0, 0);\n    }\n    30%, 50%, 70% {\n      transform: translate3d(-4px, 0, 0);\n    }\n    40%, 60% {\n      transform: translate3d(4px, 0, 0);\n    }\n  }\n`;\n\nexport default function SubPageOne() {\n  const data = useStaticQuery(graphql`\n    query myQuery {\n      allFile(filter: {name: {regex: \"/^01.+/\"}}) {\n        edges {\n          node {\n            base\n            childImageSharp {\n              fluid(maxWidth: 2048, quality: 80) {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <ExplodeStyles onClick={explode}>\n        {data.allFile.edges.map(({ node } ) => (\n          <Img\n            style={{\n              position: \"absolute\",\n              overflow: \"visible\",\n              width: `${rand(70, 30)}vmin`,\n              zIndex: rand(20, 1)\n            }}\n            className=\"explodee\"\n            fluid={node.childImageSharp.fluid}\n            key={node.base}\n            alt={node.base.split(\".\")[0] }\n          />\n        ))}\n      </ExplodeStyles>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}